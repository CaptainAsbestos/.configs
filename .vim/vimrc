noremap ; l
noremap l gk
noremap k gj
noremap j h
noremap gl k
noremap gk j
noremap h :
noremap <C-W>; <C-W>l
noremap <C-W>l <C-W>k
noremap <C-W>k <C-W>j
noremap <C-W>j <C-W>h
nnoremap ! :!

" Tab navigation like Firefox.
" nnoremap <C-S-tab> :tabprevious<CR>
" nnoremap <C-tab>   :tabnext<CR>
 nnoremap <C-t>     :tabnew<CR>
"inoremap <C-S-tab> <Esc>:tabprevious<CR>i
"inoremap <C-tab>   <Esc>:tabnext<CR>i
inoremap <C-t>     <Esc>:tabnew<CR>


inoremap <C-l> <c-g>u<Esc>[s1z=`]a<c-g>u

:command WQ wq
:command W w
:command Q q

call plug#begin()
	Plug 'preservim/nerdtree'
	Plug 'sirver/ultisnips'
	    let g:UltiSnipsExpandTrigger = '<tab>'
	    let g:UltiSnipsJumpForwardTrigger = '<tab>'
	    let g:UltiSnipsJumpBackwardTrigger = '<s-tab>'
	Plug 'lervag/vimtex'
	    let g:tex_flavor='latex'
	    let g:vimtex_view_method='zathura'
	    let g:vimtex_quickfix_mode=0
		let g:Tex_MultipleCompileFormats = 'pdf'
		let g:Tex_DefaultTargetFormat = 'pdf'
	Plug 'KeitaNakamura/tex-conceal.vim'
	       set conceallevel=1
	       let g:tex_conceal='abdmg'
	Plug 'godlygeek/tabular'
	Plug 'plasticboy/vim-markdown'
	Plug 'flazz/vim-colorschemes'
	Plug 'vim-pandoc/vim-pandoc'
		:nnoremap <leader>pdf :Pandoc pdf<Enter>
	Plug 'vim-pandoc/vim-pandoc-syntax'
		:let g:pandoc#keyboard#display_motions = 0
	Plug 'jiangmiao/auto-pairs' 
	Plug 'vim-airline/vim-airline'
	Plug 'vim-airline/vim-airline-themes'
		let g:airline_powerline_fonts = 1
		let g:airline_theme='solarized'
		let g:airline_inactive_collapse = 0
		let g:airline#extensions#tabline#enabled = 1
		let g:airline_detect_spell = 0
	Plug 'kblin/vim-fountain'
call plug#end()

source /home/alex/.vim/plugged/vim-colorschemes/colors/solarized.vim

setlocal spell
set spelllang=en_gb
	:hi SpellBad ctermfg=1 ctermbg=0
	:hi SpellRare ctermfg=5 ctermbg=0
	:hi SpellLocal ctermfg=13 ctermbg=0
	:hi SpellCap ctermfg=3 ctermbg=0
" set  rtp+=/usr/share/powerline/bindings/vim/
set laststatus=2
set t_Co=256
set mouse=a
set clipboard=unnamedplus
set whichwrap=h,l,b,s,<,>,[,]
set linebreak
set wrap
set nolist
set number
set splitbelow
set autochdir
set scrolloff=999
set wildignorecase
set ignorecase

let &t_SI = "\e[5 q"
let &t_EI = "\e[0 q"

nnoremap <Leader>f :NERDTreeToggle<Enter>
nnoremap <silent> <Leader>v :NERDTreeFind<CR>
	let NERDTreeQuitOnOpen = 1
	let NERDTreeMapActivateNode='<space>'


